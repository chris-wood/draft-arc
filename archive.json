{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-03-09T00:07:53.940857+00:00",
  "repo": "chris-wood/draft-arc",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 7,
      "id": "I_kwDONyB6uM6rFQ2R",
      "title": "Use ZKProof spec for generation of Schnorr proofs",
      "url": "https://github.com/chris-wood/draft-arc/issues/7",
      "state": "OPEN",
      "author": "cathieyun",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently, ARC defines and uses its own ZKP Schnorr compiler.\nTo reuse redundancy and reuse tooling across projects, it would be better to use the ZKProof spec defined here:\nhttps://mmaker.github.io/spfs/draft-orru-zkproof-sigma.html#name-ciphersuites\n\nHowever, adopting the ZKProof spec is blocking on it having a reference implementation and test vectors, which I filed an issue for here:\nhttps://github.com/mmaker/spfs/issues/1",
      "createdAt": "2025-02-22T00:36:06Z",
      "updatedAt": "2025-02-25T11:01:28Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "body": "@mmaker, it looks like this draft is still unpublished, so we can't use it yet (beyond the reference implementation and test vector issue that Cathie mentioned above). What is your plan to get this published and worked on in the IETF?",
          "createdAt": "2025-02-24T18:11:33Z",
          "updatedAt": "2025-02-24T18:11:33Z"
        },
        {
          "author": "mmaker",
          "authorAssociation": "NONE",
          "body": "@chris-wood  I'm happy to have it worked with the IETF and integrate your compiler into one that can be compatible also with other specs.\nCan you give me ~1week-10days to publish an implementation?\n",
          "createdAt": "2025-02-24T20:16:07Z",
          "updatedAt": "2025-02-24T20:17:37Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "body": "Sorry, let me rephrase: do you intend to submit this to the [datatracker](https://datatracker.ietf.org)? As it stands now, the specification _does not exist_, because it's not published on the dataracker. In order for us to use it, we need it to be published in the datatracker. Additionally, are you opposed to co-authors on that specification? (If not, I recommend @cathieyun join to help out!) It will progress faster through the IETF that way.\n\nAnd yeah, there's no rush for the implementation. We're not blocked by any of this. We can move to a separate ZKP compiler if and when it becomes available. Until then, we will continue using the one specified in our draft.",
          "createdAt": "2025-02-24T20:19:08Z",
          "updatedAt": "2025-02-24T20:28:12Z"
        },
        {
          "author": "mmaker",
          "authorAssociation": "NONE",
          "body": "I am happy to submit this to the datatracker. \nI am also happy to have co-authors: in fact, you and @cathieyun are already contributors with push access to the repository.\n\nHowever, this is also the first ietf spec I write, so please consider that if I don't do something it's just that I was not aware of the policy! \n(For instance, I thought it'd be added to the data tracker **after** sharing it with the cfrg, and to do so i needed to make a good case with other working groups and write an implementation that suits them.)",
          "createdAt": "2025-02-25T05:39:38Z",
          "updatedAt": "2025-02-25T05:39:50Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "body": "@mmaker understood, and no worries. You can (and should) submit to the datatracker frequently and often! This is just the place where IETF specifications live. IETF working groups and research groups require a draft to exist on the datatracker before it can be presented and considered for adoption. So, concretely, here's what I recommend you do:\n\n1. Update the co-authors to include whomever you like. (I think it's fine if you include me and Cathie -- our affiliation is included below).\n2. Submit to the datatracker.\n3. Share with CFRG and ask for time to present in Bangkok. \n\nThe reference implementation and test vectors can definitely come later, and that's OK. All that matters for now is that the draft be published so we can start \"the process.\" \n\nDoes that all make sense?\n\n------\n\nHere's the affiliation:\n\n```\nauthor:\n -\n    ins: C. Yun\n    name: Cathie Yun\n    organization: Apple, Inc.\n    email: cathieyun@gmail.com\n -\n    ins: C. A. Wood\n    name: Christopher A. Wood\n    org: Apple, Inc.\n    email: caw@heapingbits.net\n```",
          "createdAt": "2025-02-25T11:01:25Z",
          "updatedAt": "2025-02-25T11:01:25Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDONyB6uM6rFSQW",
      "title": "Define ARC protocol over a generic MAC protocol",
      "url": "https://github.com/chris-wood/draft-arc/issues/8",
      "state": "OPEN",
      "author": "cathieyun",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently, the ARC protocol is defined in relation to the CMZ14 MAC_GGM protocol. To more clearly illustrate which parts of the protocol are specific to ARC, and which can be generic over any MAC, we should define the ARC protocol over a generic MAC protocol, and then specify that MAC as CMZ14 MAC_GGM in a following section. \n\nThis will make it easier to later introduce different MAC backends, which have different tradeoffs (eg BBS MAC, muCMZ MAC, etc) without changing the protocol itself. \n\nThe initial change (defining the ARC protocol over a generic MAC, and defining CMZ14 MAC_GGM in a different section) will not change the functionality (test vectors will not be affected, for example) and is primarily editorial.",
      "createdAt": "2025-02-22T00:42:00Z",
      "updatedAt": "2025-02-22T00:42:00Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDONyB6uM6rbGWx",
      "title": "Statistical anonymity is not (yet) achieved",
      "url": "https://github.com/chris-wood/draft-arc/issues/10",
      "state": "OPEN",
      "author": "mmaker",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The specification currently writes:\n\n> The resulting request is therefore perfetly hiding, and independent from other requests from the same client. More details about this unlinkability property can be found in {{KVAC}} and {{REVISITING_KVAC}}.\n\nThis is not true. The  public parameters in your spec `X_0` is defined as\n```\n  X0 = x0 * G.GeneratorG() + x0Blinding * G.GeneratorH()\n```\nwhich is only computationally binding. \nAn adversary breaking DL could in theory find `x0` and `x0'`, both committing to `X0`, and use them to sign different credentials. \n\nThis is the reason why in {{REVISITING_KVAC}} I **don't** set `X0` in this way. \nIn order to achieve stronger privacy you need to commit to X0 differently. \n\n(Nitpick: I am also not sure how you can get more than statistical anonymity, from thm 5.10 you also need soundness of the user proofs.)",
      "createdAt": "2025-02-24T19:53:28Z",
      "updatedAt": "2025-02-24T19:53:28Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDONyB6uM6rbV1E",
      "title": "Improve issuance of credentials, from linear to constant communication",
      "url": "https://github.com/chris-wood/draft-arc/issues/11",
      "state": "OPEN",
      "author": "mmaker",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "You can change the issuance protocol and have half communication on the server side and the client side.\nFor generic credentials, this is a constant vs linear improvement. \n\nReplace \n```\n  m1Enc = m1 * generatorG + r1 * generatorH\n  m2Enc = m2 * generatorG + r2 * generatorH\n```\n\nWith\n```\nmEnc = m1 * X1 + m2 * X2 + r * generatorG\n```\n\nas in {{REVISITING_KVAC}}",
      "createdAt": "2025-02-24T20:25:33Z",
      "updatedAt": "2025-02-24T20:26:10Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDONyB6uM6rb8z_",
      "title": "Reference implementation cleanup: seeded PRNGs for test vectors",
      "url": "https://github.com/chris-wood/draft-arc/issues/12",
      "state": "OPEN",
      "author": "cathieyun",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently we get deterministic ZKP output by using an incrementing counter for blinding:\nhttps://github.com/chris-wood/draft-arc/blob/main/poc/zkp.sage#L62\n\nWe should move to a seeded PRNG instead, this is better practice. \n\n(Suggestion from Michele / @mmaker)",
      "createdAt": "2025-02-24T21:47:37Z",
      "updatedAt": "2025-02-24T21:47:37Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 14,
      "id": "I_kwDONyB6uM6sL0dM",
      "title": "NotImplementedError",
      "url": "https://github.com/chris-wood/draft-arc/issues/14",
      "state": "OPEN",
      "author": "mmaker",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Python has a specific exception for not-implemented errors, called \"[NotImplementedError](https://docs.python.org/3/library/exceptions.html#NotImplementedError)\". This should be preferred to raising a string object \"Not implemented\"",
      "createdAt": "2025-03-01T09:56:10Z",
      "updatedAt": "2025-03-01T09:56:37Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 16,
      "id": "I_kwDONyB6uM6sXSHS",
      "title": "MakePresentationState adds a nonce to the state",
      "url": "https://github.com/chris-wood/draft-arc/issues/16",
      "state": "OPEN",
      "author": "karulont",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The code block at https://chris-wood.github.io/draft-arc/draft-yun-cfrg-arc.html#name-presentation-state that describes making the presentation state (`MakePresentationState`) also adds a single random nonce to the `presentationNonceSet`. It seems to me that it is not required, because `Present` will also pick a random nonce and add it to the set of used nonces.",
      "createdAt": "2025-03-03T16:55:06Z",
      "updatedAt": "2025-03-03T16:55:06Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 17,
      "id": "I_kwDONyB6uM6sXVn4",
      "title": "PrivacyPass: Section 8.1 improvements",
      "url": "https://github.com/chris-wood/draft-arc/issues/17",
      "state": "OPEN",
      "author": "karulont",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "1. [Section 8.1](https://chris-wood.github.io/draft-arc/draft-yun-privacypass-arc.html#name-token-creation) could define what `challenge_digest` is.\n2. Notice the difference in description between `token_type` and `presentation_nonce`.\n```\n\"token_type\" is a 2-octet integer, in network byte order, equal to 0xC7D3.\n\"presentation_nonce\" is a 32-bit encoding of the nonce output from ARC.\n```\nOne defines the byte order, the other does not specify which \"32-bit encoding\". I suggest to use \"4-octet integer, in network byte order\"",
      "createdAt": "2025-03-03T16:59:57Z",
      "updatedAt": "2025-03-03T16:59:57Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 18,
      "id": "I_kwDONyB6uM6sXYXW",
      "title": "PrivacyPass: Token Verification should mention checking the presentation tag.",
      "url": "https://github.com/chris-wood/draft-arc/issues/18",
      "state": "OPEN",
      "author": "karulont",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "[Section 8.2 Token Verification](https://chris-wood.github.io/draft-arc/draft-yun-privacypass-arc.html#section-8.2)\nShould mention that to avoid double spending, we need to check that the presentation tag has not been observed before.\nIt is mentioned in the ARC spec, but not in the privacy pass adoption.",
      "createdAt": "2025-03-03T17:04:55Z",
      "updatedAt": "2025-03-03T17:04:55Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 19,
      "id": "I_kwDONyB6uM6sXYrS",
      "title": "PrivacyPass: Section 9: the last link to Section 7.2 of [AUTHSCHEME] should instead be to: Section 6.2 of [ARCHITECTURE]",
      "url": "https://github.com/chris-wood/draft-arc/issues/19",
      "state": "OPEN",
      "author": "karulont",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "[Section 9](https://chris-wood.github.io/draft-arc/draft-yun-privacypass-arc.html#name-security-considerations): the last link to Section 7.2 of [AUTHSCHEME] should instead be to: Section 6.2 of [ARCHITECTURE]",
      "createdAt": "2025-03-03T17:05:30Z",
      "updatedAt": "2025-03-03T17:05:30Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 20,
      "id": "I_kwDONyB6uM6s1EU7",
      "title": "PrivacyPass: Section 8.2 `request_context` and `presentation_context` are wrong",
      "url": "https://github.com/chris-wood/draft-arc/issues/20",
      "state": "OPEN",
      "author": "karulont",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "What happened is that #13 changed the `request_context` and `presentation_context` definitions, but it forgot to update them in Section 8.2: Token Verification.",
      "createdAt": "2025-03-06T07:30:14Z",
      "updatedAt": "2025-03-06T07:30:40Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDONyB6uM6JkhuC",
      "title": "Cleanup pass over the spec draft",
      "url": "https://github.com/chris-wood/draft-arc/pull/1",
      "state": "MERGED",
      "author": "cathieyun",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Documentation / spec updates:\r\n- Removed Hash from ciphersuite dependency\r\n- Added explanation of why we are using KVAC instead of BBS\r\n- Clarified that the issuance protocol uses Pedersen commitments, for perfect privacy\r\n- Corrected the incorrect presentation proof scalar descriptions\r\n\r\nBehavioral changes:\r\n- Changed the presentationState definition to generate the nonce only when needed (instead of proactively generating / holding onto a presentationNonce). Updated the proof of concept accordingly.\r\n- Changed the proof of concept presentationState to have nonces start at 0 (instead of 1)\r\n-  Tightened the presentation limit bounds to 0 <= nonce < rateLimit (was previously allowing for nonce = rateLimit)\r\n\r\nFixes:\r\n- Added `x2` to the ServerKey test vectors (previously had a typo, repeated `x1` twice).\r\n\r\nSome things I have questions about:\r\n- Why aren't the presentation proof statements (5.4) rendering correctly? I don't see anything that should result in a formatting error, but the markdown seems unhappy with the Tag definition.",
      "createdAt": "2025-01-31T00:51:57Z",
      "updatedAt": "2025-01-31T13:15:02Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "9cfc01da472c850860006c4a0b0570a477dca2e2",
      "headRepository": "chris-wood/draft-arc",
      "headRefName": "cathie/cleanup",
      "headRefOid": "b67e765525d3a80637e67095d5019049eb950a5f",
      "closedAt": "2025-01-31T13:15:02Z",
      "mergedAt": "2025-01-31T13:15:02Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0f1198a859c747541f23185b1707f66433a315b5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONyB6uM6aLi0m",
          "commit": {
            "abbreviatedOid": "34e4d55"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T13:12:44Z",
          "updatedAt": "2025-01-31T13:12:44Z",
          "comments": [
            {
              "originalPosition": 416,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-01-31T13:12:44Z",
              "updatedAt": "2025-01-31T13:12:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONyB6uM6aLjq6",
          "commit": {
            "abbreviatedOid": "68d20a7"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-31T13:13:23Z",
          "updatedAt": "2025-01-31T13:14:08Z",
          "comments": [
            {
              "originalPosition": 419,
              "body": "```suggestion\r\nThe BBS anonymous credential scheme, as detailed in {{BBS}} and its variants, is efficient and publicly verifiable, but requires pairings for verification. This is problematic for adoption because pairings are not supported as widely in software and hardware as non-pairing elliptic curves.\r\n```",
              "createdAt": "2025-01-31T13:13:24Z",
              "updatedAt": "2025-01-31T13:14:08Z"
            },
            {
              "originalPosition": 421,
              "body": "```suggestion\r\nIt is possible to construct a keyed-verification variant of BBS which doesn't use pairings, as discussed in {{BBDT17}} and {{REVISITING_KVAC}}. However these keyed-verification BBS variants require more analysis, proofs of security properties, and review to be considered mature enough for safe deployment.\r\n```",
              "createdAt": "2025-01-31T13:14:01Z",
              "updatedAt": "2025-01-31T13:14:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDONyB6uM6JrAx9",
      "title": "Add Privacy Pass integration draft",
      "url": "https://github.com/chris-wood/draft-arc/pull/2",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Questions:\r\n1. Should requestContext be the entire challenge, or just issuer name? I think just the issuer name, letting the server use the rest of the TokenChallenge as the presentationContext.\r\n2. Do we need to include the rate limit as a challenge extension? (I think so)\r\n3. How should we encode nonce on the wire? I think 32 bits is probably fine? This does impose an upper bound on the actual rate limit, of course.\r\n4. What do we need in security considerations for the Privacy Pass draft?",
      "createdAt": "2025-01-31T17:53:46Z",
      "updatedAt": "2025-01-31T21:06:17Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "b3bb6710d338ed8fd0825f6909880e445832c9c5",
      "headRepository": "chris-wood/draft-arc",
      "headRefName": "caw/pp",
      "headRefOid": "694d54e8c735ad5e75953d4c15965a773a4089aa",
      "closedAt": "2025-01-31T21:06:17Z",
      "mergedAt": "2025-01-31T21:06:17Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0e51dff5a7e76eaddc27bf66c7bd974148a837ef"
      },
      "comments": [
        {
          "author": "cathieyun",
          "authorAssociation": "COLLABORATOR",
          "body": "1. I think that the requestContext should be as minimal as possible. So if we can have it just be the issuer name, that would be ideal (allows for more flexibility upon presentation).\r\n2. By \"challenge extension\" you mean another field in the TokenChallenge sent from the Client Origin? I had been thinking that the rate limit gets sent with the server public keys - so that can be in the TokenChallenge itself, or alongside it.\r\n   - Though looking through the origin-provided inputs, I see that the Privacy Pass spec has the origin sending the Public Key ID (issuer_key_id), instead of the public key itself. Since the client needs the full public key for the FinalizeCredential call, when does it receive the full public key? Or is this step considered to be out-of-band and not defined by the spec?\r\n3. I think 32 bits is fine. ",
          "createdAt": "2025-01-31T19:03:52Z",
          "updatedAt": "2025-01-31T19:03:52Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDONyB6uM6J6Zt9",
      "title": "Add privacy pass security considerations",
      "url": "https://github.com/chris-wood/draft-arc/pull/3",
      "state": "MERGED",
      "author": "cathieyun",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added some security considerations to the privacy pass section, working off of other specs:\r\n\r\nhttps://datatracker.ietf.org/doc/html/draft-ietf-privacypass-architecture-16#section-6\r\nhttps://datatracker.ietf.org/doc/draft-ietf-privacypass-public-metadata-issuance/\r\nhttps://datatracker.ietf.org/doc/rfc9497/\r\n\r\nSome of this repeats the security considerations in the ARC CFRG spec (eg Client Issuance Unlinkability), I'm not sure if it's okay to repeat across both specs, or where they would belong best.",
      "createdAt": "2025-02-03T22:24:38Z",
      "updatedAt": "2025-02-04T01:13:12Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "a85a40173e014733ffe96e625c73399b43d19e13",
      "headRepository": "chris-wood/draft-arc",
      "headRefName": "cathie/pp-security",
      "headRefOid": "91c301950da1cc6dbb71a062425d256af4e30f2c",
      "closedAt": "2025-02-04T01:13:12Z",
      "mergedAt": "2025-02-04T01:13:12Z",
      "mergedBy": "cathieyun",
      "mergeCommit": {
        "oid": "2f07972788431435b16750677c88ca2f14e33cf1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONyB6uM6adea4",
          "commit": {
            "abbreviatedOid": "91c3019"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-04T00:15:17Z",
          "updatedAt": "2025-02-04T00:15:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDONyB6uM6KB0It",
      "title": "Collapse security considerations",
      "url": "https://github.com/chris-wood/draft-arc/pull/4",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We defined a lot of these things in the architecture document, so I just used that language. Also, I fixed two things: (1) we don't send \"presentations,\" we send \"tokens\", and (2) the presentation context is the token challenge (and some other stuff); it's not some agreed-upon value between client and origin/issuer.",
      "createdAt": "2025-02-04T17:09:09Z",
      "updatedAt": "2025-02-04T20:17:31Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "2f07972788431435b16750677c88ca2f14e33cf1",
      "headRepository": "chris-wood/draft-arc",
      "headRefName": "caw/pp",
      "headRefOid": "6643014bb397ef96bd592ab7db2df337d4982983",
      "closedAt": "2025-02-04T20:17:31Z",
      "mergedAt": "2025-02-04T20:17:31Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f9f8ca5daa5442fc9b9376d44c1a1e46e8298531"
      },
      "comments": [
        {
          "author": "cathieyun",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM! Thanks for cleaning up the wording, I wasn't sure about some of the terminology.",
          "createdAt": "2025-02-04T20:13:25Z",
          "updatedAt": "2025-02-04T20:14:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDONyB6uM6amn2h",
          "commit": {
            "abbreviatedOid": "6643014"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-04T19:14:01Z",
          "updatedAt": "2025-02-04T19:14:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDONyB6uM6KGYl5",
      "title": "Reference implementation / test vector updates",
      "url": "https://github.com/chris-wood/draft-arc/pull/5",
      "state": "MERGED",
      "author": "cathieyun",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Small changes and cleanups I came across while working on interoperability for the test vectors - mostly domain separator updates. I also removed some unnecessary fields from the Presentation (generatorT, U_prime) and added presentation_context. \r\n\r\nIMO the test vectors should have presentation_context, for presentation creation. I see that generatorT is included currently, which can be a proxy for presentation_context, but it seems better to use presentation_context directly (it also is a bit weird to make the ARC implementation take in a generatorT from a test vector, during presentation creation), so I removed it.",
      "createdAt": "2025-02-05T07:52:27Z",
      "updatedAt": "2025-02-07T21:26:39Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "f9f8ca5daa5442fc9b9376d44c1a1e46e8298531",
      "headRepository": "chris-wood/draft-arc",
      "headRefName": "cathie/testvectors",
      "headRefOid": "497187e26cf19295f769c9c3c68fd83c640a90d5",
      "closedAt": "2025-02-05T23:03:30Z",
      "mergedAt": "2025-02-05T23:03:30Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f94fdf1fac0bfd6b5a92c530c915adebb72add49"
      },
      "comments": [
        {
          "author": "cathieyun",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok, I'm happy to keep the labels in line with the spec (so as not to change the spec).\r\n\r\nBut even then, we'll need a few tweaks here and there in the poc, like capitalizing \"tag\" in `generator_T = hash_to_group(self.presentation_context, to_bytes(\"tag\"))` to get them in sync.",
          "createdAt": "2025-02-05T16:49:39Z",
          "updatedAt": "2025-02-05T16:57:33Z"
        },
        {
          "author": "cathieyun",
          "authorAssociation": "COLLABORATOR",
          "body": "The reference implementation is now in line with the spec, from what I can tell. I didn't change the spec itself.\r\nAnd I updated the presentation context encoding to hex. \r\nPTAL :)",
          "createdAt": "2025-02-05T18:00:05Z",
          "updatedAt": "2025-02-05T18:00:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDONyB6uM6aukrC",
          "commit": {
            "abbreviatedOid": "e1b90d1"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "The label changes don't match the spec. Can we please keep them as-is?",
          "createdAt": "2025-02-05T14:11:08Z",
          "updatedAt": "2025-02-05T14:12:03Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "This should be in hex like the other test vectors.",
              "createdAt": "2025-02-05T14:11:08Z",
              "updatedAt": "2025-02-05T14:12:03Z"
            },
            {
              "originalPosition": 5,
              "body": "This doesn't match the spec:\r\n\r\n```\r\n  generatorT = G.HashToGroup(presentationContext, \"Tag\")\r\n```",
              "createdAt": "2025-02-05T14:11:40Z",
              "updatedAt": "2025-02-05T14:12:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONyB6uM6azdXT",
          "commit": {
            "abbreviatedOid": "497187e"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-05T23:03:25Z",
          "updatedAt": "2025-02-05T23:03:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDONyB6uM6KeBnn",
      "title": "Cleanup tasks",
      "url": "https://github.com/chris-wood/draft-arc/pull/6",
      "state": "MERGED",
      "author": "cathieyun",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Cleanup / documentation tasks:\r\n- Some proof documentation was incorrect - specifically, the comments for statements 5a and 5b in the response proof were in the wrong order. \r\n- Added request_context to the test vectors, so we can test that request_context gets hashed correctly to become m2. \r\n\r\nPotential additional tasks: \r\n- Currently, the ProofParticipant initializer ignores the input label, instead setting it to an empty string. We should actually use the label, to differentiate different proofs. However, I didn't make that change in this PR because it changes all the proof test vectors, which would be quite disruptive. Maybe this fix can get rolled into the next change the significantly alters the test vectors.\r\n- Add more test vectors, including negative cases.",
      "createdAt": "2025-02-07T21:09:57Z",
      "updatedAt": "2025-02-12T16:38:16Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "f94fdf1fac0bfd6b5a92c530c915adebb72add49",
      "headRepository": "chris-wood/draft-arc",
      "headRefName": "cathie/nit",
      "headRefOid": "9f1abc04db5602cb197b180ee64944f3f569cf10",
      "closedAt": "2025-02-12T16:19:06Z",
      "mergedAt": "2025-02-12T16:19:06Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "7c4fa7e7b36d94ba140f6ef36a3b71cd4f9529d1"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "body": "@cathieyun this looks good, but I think we should make the ProofParticipant label change here. ",
          "createdAt": "2025-02-11T21:34:51Z",
          "updatedAt": "2025-02-11T21:34:51Z"
        },
        {
          "author": "cathieyun",
          "authorAssociation": "COLLABORATOR",
          "body": "Done - I fixed the ProofParticipant label at initialization, and updated the test vectors accordingly. I also renamed the \"PresentationProof\" label to \"CredentialPresentation\" to have it line up with the \"CredentialRequest\" and \"CredentialResponse\" labels (that was bothering me :P).\r\nPTAL!",
          "createdAt": "2025-02-11T23:43:05Z",
          "updatedAt": "2025-02-11T23:44:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDONyB6uM6bt85P",
          "commit": {
            "abbreviatedOid": "9f1abc0"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Woot!",
          "createdAt": "2025-02-12T16:19:00Z",
          "updatedAt": "2025-02-12T16:19:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDONyB6uM6MM1HU",
      "title": "Fixing nits",
      "url": "https://github.com/chris-wood/draft-arc/pull/9",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Small editorial nits",
      "createdAt": "2025-02-23T15:41:17Z",
      "updatedAt": "2025-02-25T19:54:53Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "7c4fa7e7b36d94ba140f6ef36a3b71cd4f9529d1",
      "headRepository": "thibmeu/draft-arc",
      "headRefName": "main",
      "headRefOid": "3dde9c120cd584c2ad2ff38a4f8a0445238e8911",
      "closedAt": "2025-02-25T19:54:53Z",
      "mergedAt": "2025-02-25T19:54:53Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9779d28674e161a1cea3962be58bb6796ebbb50e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONyB6uM6dPLoU",
          "commit": {
            "abbreviatedOid": "49371a3"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T18:03:07Z",
          "updatedAt": "2025-02-24T18:03:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n  ARC: I-D.draft-yun-cfrg-arc\r\n```",
              "createdAt": "2025-02-24T18:03:07Z",
              "updatedAt": "2025-02-24T18:03:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONyB6uM6dPOIq",
          "commit": {
            "abbreviatedOid": "3dde9c1"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thanks!",
          "createdAt": "2025-02-24T18:04:05Z",
          "updatedAt": "2025-02-24T18:04:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDONyB6uM6dPPgy",
          "commit": {
            "abbreviatedOid": "49371a3"
          },
          "author": null,
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T18:04:38Z",
          "updatedAt": "2025-02-24T18:04:38Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I did not know that was supported. That's nice",
              "createdAt": "2025-02-24T18:04:38Z",
              "updatedAt": "2025-02-24T18:04:38Z"
            }
          ]
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDONyB6uM6MiM6G",
      "title": "Add new TokenChallenge to separate credential and token construction",
      "url": "https://github.com/chris-wood/draft-arc/pull/13",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "cc @thibmeu, @tfpauly ",
      "createdAt": "2025-02-25T21:20:20Z",
      "updatedAt": "2025-03-03T17:45:12Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "9779d28674e161a1cea3962be58bb6796ebbb50e",
      "headRepository": "chris-wood/draft-arc",
      "headRefName": "caw/new-challenge",
      "headRefOid": "8284c0fdad2def4d1153f7ad1dc6fe713779c733",
      "closedAt": "2025-03-03T17:45:12Z",
      "mergedAt": "2025-03-03T17:45:12Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "08c54fd64f198e85d8a90827a45944cb52e5fec3"
      },
      "comments": [
        {
          "author": "cathieyun",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM, thanks for adding this - this will help with credential expiry enforcement!",
          "createdAt": "2025-02-25T21:26:47Z",
          "updatedAt": "2025-02-25T21:26:47Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDONyB6uM6djQIf",
          "commit": {
            "abbreviatedOid": "6059e57"
          },
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T06:41:00Z",
          "updatedAt": "2025-02-26T06:48:27Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "This matches the ([yet-unwritten](https://datatracker.ietf.org/doc/html/draft-hendrickson-pp-attesterissuer-00#name-attester-to-issuer-request)) convention of putting token_type as the first byte.",
              "createdAt": "2025-02-26T06:41:00Z",
              "updatedAt": "2025-02-26T06:48:27Z"
            },
            {
              "originalPosition": 18,
              "body": "It would be great to reorder to have a structure that extends the Token Challenge Structure defined in [Section 2.1.1 of RFC9577](https://datatracker.ietf.org/doc/html/rfc9577#name-token-challenge-structure)\r\n```suggestion\r\n    opaque issuer_name<1..2^16-1>;\r\n    opaque redemption_context<0..32>;\r\n    opaque origin_info<0..2^16-1>;\r\n    opaque credential_context<0..32>;\r\n} TokenChallenge;\r\n```",
              "createdAt": "2025-02-26T06:44:32Z",
              "updatedAt": "2025-02-26T06:48:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONyB6uM6drAQu",
          "commit": {
            "abbreviatedOid": "6059e57"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T17:33:26Z",
          "updatedAt": "2025-02-26T17:33:27Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I thought about extending it, but opted not to since this is new parsing code based on the token type anyway. What do you see as the value in extending it?",
              "createdAt": "2025-02-26T17:33:26Z",
              "updatedAt": "2025-02-26T17:33:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONyB6uM6dx--a",
          "commit": {
            "abbreviatedOid": "6059e57"
          },
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T09:18:51Z",
          "updatedAt": "2025-02-27T09:18:51Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Mostly to match what exists. I agree this would be parsed anyway, but given this is the TokenChallenge it takes inspiration from at the moment could have the same order, I feel it makes sense to do it.",
              "createdAt": "2025-02-27T09:18:51Z",
              "updatedAt": "2025-02-27T09:18:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONyB6uM6d15Fp",
          "commit": {
            "abbreviatedOid": "6059e57"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T15:17:01Z",
          "updatedAt": "2025-02-27T15:17:01Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I don't feel strongly, so I'm happy to take this.",
              "createdAt": "2025-02-27T15:17:01Z",
              "updatedAt": "2025-02-27T15:17:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONyB6uM6d16NK",
          "commit": {
            "abbreviatedOid": "8284c0f"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T15:18:22Z",
          "updatedAt": "2025-02-27T15:18:22Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Isn't this specified [in the auth-scheme draft](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#name-token-challenge-structure)?\r\n\r\n```\r\nAll token challenges MUST begin with a 2-octet integer that defines the token type, in network byte order. This type indicates the issuance protocol used to generate the token and determines the structure and semantics of the rest of the structure. Values are registered in an IANA registry, [Section 6.2](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#token-types). Client MUST ignore challenges with token types they do not support.[\u00b6](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#section-2.1.1-2)\r\n```",
              "createdAt": "2025-02-27T15:18:22Z",
              "updatedAt": "2025-02-27T15:18:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONyB6uM6d2yQD",
          "commit": {
            "abbreviatedOid": "6059e57"
          },
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T16:27:29Z",
          "updatedAt": "2025-02-27T16:27:29Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "You are right. My bad. For the token challenge it works.",
              "createdAt": "2025-02-27T16:27:29Z",
              "updatedAt": "2025-02-27T16:27:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDONyB6uM6NDipV",
      "title": "Remove extra response from presentation struct",
      "url": "https://github.com/chris-wood/draft-arc/pull/15",
      "state": "MERGED",
      "author": "cathieyun",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix a typo where I had an extra response field in the presentation struct",
      "createdAt": "2025-03-02T06:56:23Z",
      "updatedAt": "2025-03-03T17:44:56Z",
      "baseRepository": "chris-wood/draft-arc",
      "baseRefName": "main",
      "baseRefOid": "9779d28674e161a1cea3962be58bb6796ebbb50e",
      "headRepository": "chris-wood/draft-arc",
      "headRefName": "cathie/typofix",
      "headRefOid": "200ae5f53265189174d80a560cfc4fba88510784",
      "closedAt": "2025-03-03T17:44:55Z",
      "mergedAt": "2025-03-03T17:44:55Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bf1ab809e30959ab97c743eb402d28fed786c37b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONyB6uM6eH4yg",
          "commit": {
            "abbreviatedOid": "200ae5f"
          },
          "author": "clangreformers",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "I have verified the change with test vectors. This change also matches [5.4.1. ]Presentation Proof Creation and [5.4.2. ] Presentation Proof Verification.\r\n\r\n-- Yingxian Wang",
          "createdAt": "2025-03-03T00:19:26Z",
          "updatedAt": "2025-03-03T00:19:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDONyB6uM6ePV5i",
          "commit": {
            "abbreviatedOid": "200ae5f"
          },
          "author": "chris-wood",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T17:44:49Z",
          "updatedAt": "2025-03-03T17:44:49Z",
          "comments": []
        }
      ]
    }
  ]
}